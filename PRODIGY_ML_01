import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Simulated data: replace this with your actual dataset
# X should contain the input features (square footage, bedrooms, bathrooms)
# y should contain the corresponding house prices
X = np.array([[1500, 3, 2], [2000, 4, 3], [1200, 2, 2], [1800, 3, 2.5]])
y = np.array([200000, 300000, 150000, 250000])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Calculate the Mean Squared Error (MSE) to evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Print the coefficients (slope) and intercept of the linear regression model
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)
